{"mappings":";;;;;;;;;;;AAAA;;;;;AEAA;;AAEO,MAAM,yCAAK,GAAG,CAAC,KAAqB,GAAK;IAC9C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAA,GAAA,eAAQ,CAAA,CAAC,CAAC,CAAC;IAErC,CAAA,GAAA,gBAAS,CAAA,CAAC,IAAM;QACd,WAAW,CAAC,IAAM,QAAQ,CAAC,CAAA,CAAC,GAAI,CAAC,GAAE,CAAC,CAAC,EAAE,IAAI,CAAC;KAC7C,EAAE,EAAE,CAAC;IAEN,qBAAO,mBAAC,KAAG;;YAAC,QAAM;YAAC,KAAK,CAAC,IAAI;YAAC,GAAC;YAAC,KAAK;;;;;;iBAAO,CAAA;CAC7C;;ADVD;;;ADGA,MAAM,yCAAM,GAAG,CAAC,IAAiB,GAAK,CAAA,GAAA,aAAM,CAAA,eAAC,mBAAC,CAAA,GAAA,+BAAK,CAAA;QAAC,IAAI,EAAC,MAAM;;;;;iBAAE,EAAE,IAAI,CAAC,AAAC","sources":["src/index.tsx","src/components/index.tsx","src/components/hello/index.tsx"],"sourcesContent":["import { render } from 'preact';\nimport { Hello } from './components';\n\nconst widget = (node: HTMLElement) => render(<Hello name=\"test\"/>, node);\nexport {widget, Hello}","export * from './hello'","import {useEffect, useState} from 'preact/hooks'\n\nexport const Hello = (props: {name: string}) => {\n  const [count, setCount] = useState(0)\n\n  useEffect(() => {\n    setInterval(() => setCount(p => p +1), 1000)\n  }, [])\n\n  return <div>Hello {props.name} {count}</div>\n}"],"names":[],"version":3,"file":"module.js.map","sourceRoot":"../"}